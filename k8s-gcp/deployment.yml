name: project-name

pod:
  annotations: {}
  securityContext: {
    fsGroup: 20001
  }
  replicas: 1
  imagePullSecrets: []
  nodeSelector: {}
  tolerations: []
  affinity: {} 

container:
  securityContext: {
    readOnlyRootFilesystem: true,
    runAsNonRoot: true,
    runAsUser: 10001,
    allowPrivilegeEscalation: false
  }
  port: 3000
  resources:
    limits:
      cpu: 100m
      memory: 128Mi
    requests:
      cpu: 100m
      memory: 128Mi
  image:
    # repository value replaced in pipeline
    repository: ""
    pullPolicy: IfNotPresent
    # tag value replaced in pipeline
    tag: ""
  envFrom:
    enabled: true
    config:
      - name: project-name-configmap
        type: configmap
      - name: project-name-config
        type: secret
  volumeMount:
    enabled: false
  volume:
    enabled: false
  livenessProbe:
    enabled: false
  readinessProbe:
    enabled: false
    
service:
  type: ClusterIP
  port: 8080
  targetPort: 3000 

serviceAccount:
  create: create
  name: "project-name-sa"

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 5
  targetCPUUtilizationPercentage: 80

configmap:
  enabled: true
  # defaults to .Values.name if name is not provided
  name: project-name-configmap
  data: 
    NODE_ENV: development

secret:
  enabled: true
  name: project-name-config # name of k8s Secret to be created
  clusterSecretStoreRef: gsm # cluster-wide SecretStore
  gsmName: project-name-dev # GCPSM secret name
